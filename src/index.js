const MORSE_TABLE = {
    '.-': 'a',
    '-...': 'b',
    '-.-.': 'c',
    '-..': 'd',
    '.': 'e',
    '..-.': 'f',
    '--.': 'g',
    '....': 'h',
    '..': 'i',
    '.---': 'j',
    '-.-': 'k',
    '.-..': 'l',
    '--': 'm',
    '-.': 'n',
    '---': 'o',
    '.--.': 'p',
    '--.-': 'q',
    '.-.': 'r',
    '...': 's',
    '-': 't',
    '..-': 'u',
    '...-': 'v',
    '.--': 'w',
    '-..-': 'x',
    '-.--': 'y',
    '--..': 'z',
    '.----': '1',
    '..---': '2',
    '...--': '3',
    '....-': '4',
    '.....': '5',
    '-....': '6',
    '--...': '7',
    '---..': '8',
    '----.': '9',
    '-----': '0',
};

function decode(expr) {

    let arr = expr.replace(/(.{1,10}(?=(?:..........)))/g, "$1" + ' ').split(' ').map((el) => {
        return el.replaceAll('00', '').replaceAll('10', '.').replaceAll('11', '-')
    })
    for (let i = 0; i < arr.length; i++) {

        for (let j = 0; j < Object.keys(MORSE_TABLE).length; j++) {

            if (arr[i] == Object.keys(MORSE_TABLE)[j]) {
                arr[i] = Object.values(MORSE_TABLE)[j]
            }
        }
    }
    return arr.join('').replaceAll('**********', ' ')
}

// console.log(decode('00101010100000000010001011101000101110100000111111**********00001011110000111111000010111000101110100000111010'))

module.exports = {
    decode
}


// "0010101010 0000000010 0010111010 0010111010 0000111111 ********** 0000101111 0000111111 0000101110 0010111010 0000111010"
// [0010101010, 0000000010, 0010111010, 0010111010, 0000111111, **********, 0000101111, 0000111111, 0000101110, 0010111010, 0000111010]
// перебрать по 2 если 00 , то 
// [10101010, 10, 10111010, 10111010, 111111, **********, 101111, 111111, 101110, 10111010, 111010]
// если 10, то 
// [...., ., .11.., .11.., 111111, **********, .1111, 111111, .11., .11.., 11..]
// если 11, то 
// [...., ., .-.., .-.., ---, **********, .--, ---, .-., .-.., -..]
// эквивалент находим
// [h, e, l, l, o, **********, w, o, r, l, d]
// "hello**********world"
// ********** заменить на пробел
// "hello world"